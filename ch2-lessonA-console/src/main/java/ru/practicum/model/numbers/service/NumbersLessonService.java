package ru.practicum.model.numbers.service;

import ru.practicum.model.numbers.file.NumbersFile;

public class NumbersLessonService {
    private final NumbersFile numbersFile;

    public NumbersLessonService(NumbersFile numbersFile) {
        this.numbersFile = numbersFile;
    }


    //1. Найти самое короткое и самое длинное число. Вывести найденные числа
    //   и их длину.
    public void lesson1() {

    }
    //2. Упорядочить и вывести числа в порядке возрастания (убывания) значений
    //   их длины.
    public void lesson2() {

    }
    //3. Вывести на консоль те числа, длина которых меньше (больше) средней,
    //   а также длину.
    public void lesson3() {

    }
    //4. Найти число, в котором число различных цифр минимально. Если таких
    //   чисел несколько, найти первое из них.
    public void lesson4() {

    }
    //5. Найти количество чисел, содержащих только четные цифры, а среди них —
    //   количество чисел с равным числом четных и нечетных цифр.
    public void lesson5() {

    }
    //6. Найти число, цифры в котором идут в строгом порядке возрастания. Если
    //   таких чисел несколько, найти первое из них.
    public void lesson6() {

    }
    //7. Найти число, состоящее только из различных цифр. Если таких чисел не-
    //   сколько, найти первое из них.
    public void lesson7() {

    }
    //8. Среди чисел найти число-палиндром. Если таких чисел больше одного,
    //   найти второе.
    public void lesson8() {

    }
    //9. Найти корни квадратного уравнения. Параметры уравнения передавать
    //   с командной строкой.
    public void lesson9() {

    }
}